%--------------------------------------------------------------------------
%   初始化
%   单点零陷,只能精确控制一个点
%--------------------------------------------------------------------------
clear;clc;

%--------------------------------------------------------------------------
%   参数设置
%--------------------------------------------------------------------------
N = 64;                                                                     %阵元个数
theta = [-45 10];                                                           %期望的天线指向+零陷

%--------------------------------------------------------------------------
%   生成参数
%--------------------------------------------------------------------------
lambda = 1;                                                                 %波长
dd = lambda/2;                                                              %阵元间距d = lambda/2
d = 0:dd:(N-1)*dd;                                                          %构建阵列坐标
angle_axis = -90:0.1:90;


%--------------------------------------------------------------------------
%   初始导向矢量
%--------------------------------------------------------------------------
A = exp(1j.*2*pi*d.'*sind(theta));
window_N = taylorwin(N);
w = window_N.*A(:,1);
load('DBF.mat')

%--------------------------------------------------------------------------
%   确定角度搜索范围
%--------------------------------------------------------------------------
max_theta = 0;

for k = 2:numel(theta)
    max_theta = theta(k);
    rho_k = db2pow(-60);                                                    %更新期望值dB
    w(:,k) = exp(1j.*2*pi*d.'*sind(max_theta));                             %生成导向矢量
    A(:,k) = exp(1j.*2*pi*d.'*sind(max_theta));                             %生成导向矢量
    %----------------------------------------------------------------------
    %   计算系数
    %----------------------------------------------------------------------
    P_k(k-1) = abs(w(:,k-1)'*A(:,k)).^2;
    P_1(k-1) = abs(w(:,k-1)'*A(:,1)).^2;
    v_k1 = A(:,k)'*A(:,1);
    d_k = w(:,k-1)' * A(:,k) * norm(A(:,k))^2-rho_k*w(:,k-1)'*A(:,1)*v_k1;
    Q(:,:,k) = [P_k(k-1) - rho_k*P_1(k-1) ...
                d_k; ...
                conj(d_k)...
                norm(A(:,k))^4 - rho_k*abs(v_k1).^2];
    %----------------------------------------------------------------------
    %   圆心与半径
    %----------------------------------------------------------------------
    c(:,k) = 1/Q(2,2,k)*[-real(Q(1,2,k)) + 1j.*imag(Q(1,2,k))];
    r(k) = real(sqrt(-det(Q(:,:,k))))/abs(Q(2,2,k));
    %----------------------------------------------------------------------
    %   最优系数
    %----------------------------------------------------------------------
    u(k) = (norm(c(:,k))-r(k))/norm(c(:,k))*c(:,k);                             %最佳系数
    %----------------------------------------------------------------------
    %   更新
    %----------------------------------------------------------------------
    w(:,k) = w(:,k-1) + u(k).* A(:,k);
    [L,L_P,L_dB] = L_norm_array_pattern(w(:,k),angle_axis);

    %----------------------------------------------------------------------
    %   可视化
    %----------------------------------------------------------------------
    
    figure(1);
    plot(angle_axis,L_dB,'LineWidth',1.5);grid on;hold on
    plot(scan_angle,spur_mag_dB(:,1) - max(spur_mag_dB(:)),'LineWidth',1.5);hold off
    axis([-60 60 -80 0])
    drawnow

end
