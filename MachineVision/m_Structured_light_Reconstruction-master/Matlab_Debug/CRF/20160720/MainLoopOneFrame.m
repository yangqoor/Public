%% Set start status of iteration
last_depth_mats = depth_mats{start_frame_num, 1};
last_frame_idx = start_frame_num - 1;
for frame_idx = start_frame_num+1:1:data_frame_num
    % Initial
    fprintf('F%d:', frame_idx);
    last_frame_idx = last_frame_idx + 1;
    mask_mat = SetMaskMat(camera_image{last_frame_idx, 1}, ...
        camera_image{frame_idx, 1}, ...
        viewportMatrix);
    if sum(sum(mask_mat(viewportMatrix(2,1):viewportMatrix(2,2), viewportMatrix(1,1):viewportMatrix(1,2)))) < 400
        depth_mats{frame_idx, 1} = depth_mats{frame_idx-1, 1};
        last_frame_idx = last_frame_idx - 1;
        continue;
    end
    beliefField = FillInitialBeliefField(camera_image{frame_idx, 1}, ...
        mask_mat, ...
        pattern, ...
        depth_mats{last_frame_idx, 1}, ...
        lineA, ...
        lineB, ...
        lineC, ...
        viewportMatrix, ...
        norm_sigma_u, ...
        voxelSize, ...
        halfVoxelRange);
%     mask_mat = ones(CAMERA_HEIGHT, CAMERA_WIDTH);
    tmp_delta_depth_mat = GetDeltaDepthFromBeliefField(beliefField, ...
        viewportMatrix, ...
        voxelSize, ...
        halfVoxelRange);
    save(['belief_field/', 'belief_field', num2str(frame_idx), '_iter_', num2str(0), '.mat'], 'beliefField');
%     tmp_depth_mat = GetDepthFromBeliefField(beliefField, ...
%         depth_mats{frame_idx-1, 1}, ...
%         viewportMatrix, ...
%         voxelSize, ...
%         halfVoxelRange);
%     save(['depth_mat/', 'delta_frame_', num2str(frame_idx), '_iter_', '0', '.mat'], 'tmp_delta_depth_mat');
%     writepointcloud(tmp_depth_mat, ...
%         camMat, ...
%         ['point_cloud/', 'frame_', num2str(frame_idx), '_iter_', '0', '.txt'], ...
%         viewportMatrix);

    % Iteration
    for iter_idx = 1:10
        beliefField = BeliefFieldIterationFast(beliefField, ...
            camera_image{frame_idx, 1}, ...
            mask_mat, ...
            pattern, ...
            depth_mats{last_frame_idx, 1}, ...
            lineA, ...
            lineB, ...
            lineC, ...
            norm_sigma_u, ...
            norm_sigma_p, ...
            viewportMatrix, ...
            voxelSize, ...
            halfVoxelRange, ...
            halfNeighborRange);
        tmp_delta_depth_mat = GetDeltaDepthFromBeliefField(beliefField, ...
            viewportMatrix, ...
            voxelSize, ...
            halfVoxelRange);
        tmp_depth_mat = GetDepthFromBeliefField(beliefField, ...
            depth_mats{last_frame_idx, 1}, ...
            viewportMatrix, ...
            voxelSize, ...
            halfVoxelRange);
        save(['belief_field/', 'belief_field', num2str(frame_idx), '_iter_', num2str(iter_idx), '.mat'], 'beliefField');
%         save(['depth_mat/', 'delta_frame_', num2str(frame_idx), '_iter_', num2str(iter_idx), '.mat'], 'tmp_delta_depth_mat');
%         writepointcloud(tmp_depth_mat, ...
%             camMat, ...
%             ['point_cloud/', 'frame_', num2str(frame_idx), '_iter_', num2str(iter_idx), '.txt'], ...
%             viewportMatrix);
    end
    total_delta_depth_mat = Intersection(tmp_delta_depth_mat, mask_mat, viewportMatrix);
    save(['depth_mat/', 'delta_frame_', num2str(frame_idx), '.mat'], 'total_delta_depth_mat');
    save(['depth_mat/', 'mask_mat', num2str(frame_idx), '.mat'], 'mask_mat');
    depth_mats{frame_idx, 1} = total_delta_depth_mat + depth_mats{last_frame_idx , 1};
    writepointcloud(depth_mats{frame_idx, 1}, ...
        camMat, ...
        ['point_cloud/', 'frame_', num2str(frame_idx), '.txt'], ...
        viewportMatrix);
end
