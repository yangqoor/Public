%   Desc_conv_QP

%  Решение интегрального уравнения 1-го рода на классе монотонно не возраст.
%  и выпуклых (вниз) функций, ограниченных снизу числом C_min (с.173).

if ~exist('fmincon');disp(' ');
  disp('  ВНИМАНИЕ! Демонстрация прерывается, т.к. на этой ЭВМ');
  disp('  не установлен компонент МАТЛАБа - Optimization Toolbox.');return;end

clear all;close all
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FntNm='Arial Cyr';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
vvv=ver('MATLAB');nmver=str2num(vvv.Version);if nmver>6;
warning('off','MATLAB:dispatcher:InexactMatch');end

disp(' ');
disp(' Решение интегрального уравнения Фредгольма 1 рода на классе');
disp(' монотонно не возрастающих и выпуклых (вниз) функций. Регуляризующий ')
disp(' алгоритм: ОПК с регуляризатором-вариацией. Реализация -- сведение к ');
disp(' задаче квадратичного программирования (с.173).');disp(' ');


% Описание модельных задач
disp(' ');
disp(' Описание модельных задач: 1) z(s)={sqrt{1-s}+5 при 0<s<1;5 при 1<s<2}');
disp('                           2) z(s)={{1-s}^{3/2}+5 при 0<s<1;5 при 1<s<2}');

%   Задание параметров
%numm=2;% Выбрать модельную задачу (1, 2)
numm=input(' Введите номер задачи (1,2): ');numm=round(numm);
if isempty(numm)|abs((numm-1.5))>1;
    disp('     Номер неверный. Повторите ввод!');return;end
new_er=0;% Выбрать новую реализацию ошибок данных (new_er=1) или стандартнные (new_er=0)? 
%   Задание уровня ошибок данных
delta=0.03;% правая часть уравнения
deltaA=0.01;% ошибки ядра
disp(' ');
disp(' ');disp(['   Решается модельная задача № ' num2str(numm)]);disp(' ');
disp(['   Уровни возмущения данных: h = ' num2str(deltaA) ' delta = ' num2str(delta)]);
disp(' ');

[a0,s,h,A,U0,u1,C_min,RU,RA]=mod_probl(numm);

% U0 -- точная правая часть уравнения, А -- ядро

%% Выбрать новую помеху или стандартную?   
if new_er==1;
   RU=randn(size(U0));RA=randn(size(A));
   else end;

NRA=norm(RA);NRU=norm(RU);
U=U0+delta*norm(U0)*RU/NRU;% Приближенная правая часть уравнения
AA=A+deltaA*norm(A)*RA/NRA;% Приближенная матрица задачи

disp(' ');disp('    1) Решение задачи квадратичного программирования методом');
disp('    наименьших квадратов с ограничением неотрицательности (NNLS)');
disp('    и без ограничения решения сверху.');disp(' ');pause(1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                       Метод NNLS
n=size(AA,2);T1=triu(ones(n-1));T=[T1*T1 ones(n-1,1);zeros(1,n-1) 1];
zz1=zeros(n,1);B=[AA*T];b=U-C_min*AA*ones(n,1);;
%tic;zz1=nnls(B,b);toc;zz1(end)=0;% Граничное условие
tic;zz1=lsqnonneg(B,b);disp(' ');disp('Time NNLS:');toc;zz1(end)=0;
zz=T*(zz1(1:n))+C_min;Umon=AA*zz;
disp(' ');
disp('    2) Решение задачи квадратичного программирования с ограничением решения сверху');
disp('    (квазиньютоновский метод)');pause(1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%     Метод квадратичного программирования (квазиньютоновский метод)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
H=B'*B;f=-B'*b;G=T;g=ones(n,1)/h;
LB=zeros(n,1);warning off;
tic;w=quadprog(H,f,G,g,[],[],LB,[],zeros(n,1));disp(' ');disp('Time Quadr_Prog:');toc
w(end)=0;zzz=T*w+C_min;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Error_NNLS =norm(zz-a0')/norm(a0);
Error_Quadr_Prog =norm(zzz-a0')/norm(a0);
disp(' ');disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');disp(' ');
disp('          Относительные ошибки решений (L_2)                          ');
disp(' ');disp([' Error_NNLS =' num2str(Error_NNLS)]);
disp(' ');disp([' Error_Quadr_Prog =' num2str(Error_Quadr_Prog)]);disp(' ');
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');disp(' ');

figure(2);plot(s,u1,'r.-',s,U,'b.');set(gca,'FontName',FntNm);
legend('Точная правая часть','Приближенная правая часть',1);
title([' \delta=' num2str(delta) ' \delta_A=' num2str(deltaA)])
xlabel('x');ylabel('u(x)')

figure(1);plot(s,a0,'r.-',s,zz,'bo-',s,zzz,'k.-');set(gca,'FontName',FntNm);
legend('Точное решение','NNLS','Квазиньютоновский метод',1);
title(['Решение на классе монотонно не возрастающих функций; \delta=' num2str(delta) ' \delta_A=' num2str(deltaA)])
xlabel('s');ylabel('z(s)')
