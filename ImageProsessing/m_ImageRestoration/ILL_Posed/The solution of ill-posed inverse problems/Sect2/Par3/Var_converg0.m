%  Var_converg0

%  Предварительная демонстрация из гл.2, параграф 3

% Решение интегрального уравнения Фредгольма 1-го рода различными методами.
%    Сравнение качества получаемых приближений в зависимости от типа сходимости.

% 1) Решение задачи без регуляризации путем обращения оператора.
% 2) Алгоритм кусочно-равномерной регуляризации (решение на классе монотонных функций)
% 3) Тихоновская регуляризация 1-го порядка (дает сходимость по вариации и в С)
% 4) Обобщенный метод невязки для функционала обобщенной энтропии - для сходимости
%    приближений по вариации.

clear all
close all

global zadan

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FntNm='Arial Cyr';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
disp('  ');
disp('  Решение интегрального уравнения Фредгольма 1-го рода различными методами.');
disp('    Сравнение качества получаемых приближений в зависимости от гарантируемого');
disp('    типа сходимости.');
disp('    Применяются следующие методы:');
disp('    1) Решение задачи без регуляризации путем обращения оператора.');
disp('    2) Тихоновская регуляризация 1-го порядка (дает сходимость по вариации и в С)');
disp('    3) Алгоритм кусочно-равномерной регуляризации (решение на классе монотонных функций)');
disp('    4) Обобщенный метод невязки для функционала обобщенной энтропии - дает сходимость');
disp('       приближений по вариации.');
disp('          Обозначения:');
disp('        Residual - невязка уравнения; C_error - относительная ошибка решения в С[a,b]');
disp('        Var_error_ ... - относительная ошибка решения по вариации.');
disp('  ');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%                    Модельное решение

zadan=1;% Нахождение решения из W_1^1 - zadan=1; 
% нахождение решения из W_1^2 - zadan=2 -- в этой демонстрации не поддерживается 

% Сетка
N7=31;N3=N7;N=N3+N7-1;
s7=linspace(0,1,N7);s3=linspace(0,1,N3);% Для простоты сетки -- равномерные.
% Точное модельное решение
if zadan==1;
   a0=[ 7*sqrt(abs(s7-1))+5  5*ones(size(s3(1:end-1)))];
else 
  a0=[ 7*(abs(s7-1)).^(3/2)+5  5*ones(size(s3(1:end-1)))];
  disp(' Такая задача не поддерживается!');return
   end
s=[ s7 s7(end)+s3(2:end)];
hsf=s(2)-s(1);% Шаг сетки решения
%
da0=diff(a0)./hsf;% 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%              Задание режимов работы (0 - не надо, 1 - надо)
%
exsol=0;% Не надо решать задачу для точных данных
nonr=1;%  Не надо решать нерегуляризованную задачу
monr=1;%  Не надо решать задачу на монотонных функциях
OMN=1;% Не надо применять OМН
new_er=0;% Выбрать новую помеху (new_er=1) или стандартную (new_er=0)? 
er_comparison=1; % Не надо строить график сравнения поточечных ошибок методов

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Точные данные задачи
p=100;
[XX,TT]=meshgrid(s,s);K1=1./(1+p*(XX-TT).^2);u=righ_hand(s,p);


% Преобразование данных в матричную форму:
Hx=ones(1,N)*hsf;Hx(1)=0.5*Hx(1);Hx(end)=Hx(1);
Ht=ones(1,N)*hsf;Ht(1)=0.5*Ht(1);Ht(end)=Ht(1);
HHx=repmat(sqrt(Hx)',1,N);HHt=repmat(Ht,N,1);h=hsf;
A=K1.*HHx.*HHt;% -- матрица системы
%  Преобразованная правая часть:
u1=u.*sqrt(Hx);% -- правая часть системы

% Уровень относительного возмущения данных
delta=0.001;
deltaA=0.0001;
U0=u1';

disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');
disp(' ');disp('   Уровни относительной ошибки данных');
disp(' ');
disp(['      delta = ' num2str(100*delta) ' %      delta_A = ' num2str(100*deltaA) ' %']);
disp(' ');

if exsol==1;
   disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');
disp(' ');disp('   Далее будет все время решаться задача с точными данными');
disp(' ');disp('   Для решения нажмите любую клавишу');pause

warning('off','MATLAB:dispatcher:InexactMatch');

% Решение задачи без возмущений
% Вычисление решения обратной задачи
z1=A\U0;% 

% Вычисленная правая часть
UU=A*z1;
Residual=norm(UU-U0)/norm(U0)
Error=norm(z1'-a0)/norm(a0)

figure(101);subplot(1,2,1);plot(s,a0,'r',s,z1,'.');
set(gca,'FontName',FntNm);
title('Точное и приближенное решение');
legend('Точное решение','Приближенное решение',1);
old_val(s,U0,UU);
set(gca,'FontName',FntNm);
title('Приближ. и вычисл. правая часть');
legend('u_{\delta}','Az_{приближ}',1);
set(gcf,'Name','Без возмущений данных','NumberTitle','off','Position',[435 237 560 420]);

delta=0;deltaA=0;RU=randn(size(U0));RA=randn(size(A));

else
% Решение задачи c возмущениями - неустойчивость задачи
% Выбрать новую помеху или стандартную?   
if new_er==1;RU=randn(size(U0));RA=randn(size(A));
else load err_realization RU RA;  
end
end

NRA=norm(RA);NRU=norm(RU);
U=U0+delta*norm(U0)*RU/NRU;% Приближенная правая часть уравнения
AA=A+deltaA*norm(A)*RA/NRA;% Приближенная матрица задачи

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Вычисление нерегуляризованного решения
if nonr==1;
   nonregul;
else Var_error_n=[];end 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Регуляризация задачи на классе W_2^1,W_2^2
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');
disp(' ');if zadan==1;disp('   Тихоновская регуляризация задачи на классе W_2^1');
   else disp('   Тихоновская регуляризация задачи на классе W_2^2');end
disp('    Выбор параметра регуляризации alpha по различным критериям.');
disp(' ');
   disp('   Для решения нажмите любую клавишу');pause

%     Задание регуляризатора
reg=1;% регуляризатор 1-го порядка
%reg=0;% регуляризатор 0-го порядка
if zadan == 2;reg=2;end% регуляризатор 2-го порядка
Tikh_reg_w
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if monr==1;
% Решение на классе монотонных функций
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');
disp(' ');disp('   Решение на классе монотонных функций');
disp(' ');disp('   Для решения нажмите любую клавишу');pause
monot_reg;
else Var_error_m=[];Del_L2_mon=[];V_1_mon=[];end % monr

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% Регуляризация по вариации - в W_1^1 - ОМН
if OMN==1;
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');
disp(' ');disp('   Обобщенный метод невязки (ОМН) в W_1^1.');
disp('    Минимизация функционала обобщенной энтропии');
disp('    для получения сходимости по вариации');
disp(' ');disp('   Для решения нажмите любую клавишу');pause
     OMN_reg;
end %OMN

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                   Сравнение поточечных ошибок методов
ma0=max(a0);
if er_comparison==1;
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');
disp(' ');disp('   Сравнение поточечных ошибок методов. Нажмите любую клавишу');pause   
figure(77);plot(s,(zrd'-a0)/ma0,'.-b',s,(zz'-a0)/ma0,'.-g',...
   s,(cm'-a0)/ma0,'-r',[s(1) s(end)],[0 0],'k');
set(gca,'FontName',FntNm);
if zadan==1;legend('W_2^1','Monot','W_1^1',1);else legend('W_2^2','Monot','W_1^2',1);end
title('Поточечная относительная ошибка приближенного решения ')
set(gca,'XLim',[s(1) s(end)]);set(gcf,'Position',[435 237 560 420]);
else end

disp(' ');disp('%%%%%%%%%%%%%%%%% Конец %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ');disp(' ');


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



