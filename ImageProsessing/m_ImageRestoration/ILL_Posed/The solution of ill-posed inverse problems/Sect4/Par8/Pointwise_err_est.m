%   Pointwise_err_est  

%  Поточечная апостериорная оценка точности приближенного решения обратной задачи 
%  на классе функций с ограниченной вариацией (рассматривается частный
%  случай, когда точное решение монотонно) (с.232).

if ~exist('fmincon');disp(' ');
  disp('  ВНИМАНИЕ! Демонстрация прерывается, т.к. на этой ЭВМ');
  disp('  не установлен компонент МАТЛАБа - Optimization Toolbox.');return;end

clear all;close all
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FntNm='Arial Cyr';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Описание моделей: 1) Интегральное уравнение Фредгольма с ядром Пуассона (p=100). Решение --
%                      функция класса W_1^1. Приближенное решение на классе монотонных
%                      функций загружается из файла.
%                   2) Та же задача, но приближенное решение ранее найдено по алгоритму ОМН                      функция класса W_1^1. Приближенное решение на классе монотонных
%                      на классе W_1^1. Оно загружается из файла
%                   2) Интегральное уравнение Фредгольма с ядром Пуассона (p=20). Решение --
%                      (s-1).^2. Оно вычисляется здесь же на классе выпуклых вниз функций.

% Задание точного решения и точной правой части: 
disp(' ');disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
disp(' ');
disp(' Поточечная апостериорная оценка точности приближенного решения обратной задачи,');
disp(' которое принадлежит классу функций ограниченной вариации.');disp(' ');
disp('   Различными методами решается интегральное уравнение 1 рода с ядром ');
disp('   Пуассона. Затем по методике из гл.4 \S8 оценивается поточечная ');
disp('   апостериорная точность полученного решения ');disp(' ');
disp('       Описание задач и алгоритмов их решения: ');
disp('       1) точное решение z={sqrt(1-s)+5, 0<s<1; 5, 1<s<2};');
disp('          метод приближенного решения - на классе монотонных функций (с.168);');
disp('       2) точное решение z={sqrt(1-s)+5, 0<s<1; 5, 1<s<2};');
disp('          метод приближенного решения - алгоритм ОМН на классе W_1^1 (с.181);');
disp('       3) точное решение z=(s-1)^2, 0<s<1;');
disp('          метод приближенного решения - на классе выпуклых вниз функций (с.173)');

disp(' ');
nummer=input('          Введите номер задачи (1,2,3): ');
if isempty(nummer)|abs((nummer-2))>1;
    disp('     Номер неверный. Повторите ввод!');return;end

disp(['        Задача ' num2str(nummer)]);disp(' ')

%
%nummer=2; % -- номер модели
sterr=1; % -- стандартная ошибка -- sterr=1
[s,a0,hsf,A,u,N,C_min,C_max]=new_model3(nummer);h=hsf;z=a0';U0=u';C=1.1;

% Уровень относительного возмущения данных
delta=0.01;
deltaA=0.0001;
disp(['   Уровень ошибки delta = ' num2str(delta) ]);


% Возмущение данных 
if sterr==1;if nummer==1;load st_er_poin1;elseif nummer==2;
    load st_er_poin2;else load st_er_poin3;end;
else RU=randn(size(U0));RA=randn(size(A));
  end
NRA=norm(RA);NRU=norm(RU);
U=U0+delta*norm(U0)*RU/NRU;% Приближенная правая часть уравнения
% Приближенная матрица задачи
AA=A+deltaA*norm(A)*RA/NRA;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%          Решение на классе выпуклых функций (задача 3)
%          или загрузка ранее вычисленных решений (задачи 1, 2)

n=size(AA,2);
if (nummer == 3);T=triu(ones(n))*triu(ones(n));else T=triu(ones(n));end
B=[AA*T];b=U-C_min*AA*ones(n,1);
%
if  (nummer==3);
   %         Алгоритм квадратичного программирования
options=optimset('Diagnostics','off','Display','off');warning off
H=B'*B;f=-B'*b;%
G=[T];g=(C_max-C_min)*ones(n,1);
LB=zeros(max(size(B)),1);warning off;
tic;w=quadprog(H,f,G,g,[],[],LB,[],zeros(n,1),options);disp(' ');
disp('Time of solution:');toc
zzz=T*w+C_min;zz=zzz;
elseif (nummer==1);load solution_mon sy;zzz=sy';zz=zzz;
else load solution_w11 sy;zzz=sy';zz=zzz;end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  EE - апостериорная оценка поточечной ошибки правой части 

Del=delta+deltaA*norm(zz)*sqrt(h); 
EE=1.1*Del*(abs(U));
if  (nummer==1);Om=reshsm1(s,zz,C_min,nummer)-C_min;else Om=zz-C_min;end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%     Поточечная апостериорная оценка точности приближенного решения
%     на классе монотонных или выпуклых функций (верхняя оценка -- Eru, нижняя -- Er)
%
options=optimset('Diagnostics','off','Display','off');warning off
h3 = waitbar(0,'Wait a minute...');disp('Time of error_estimation:');
tic
for k=1:n;waitbar(k/n,h3);Q=zeros(n);Q(k,:)=T(k,:);q=zeros(n,1);
q(k)=Om(k);H=-Q'*Q;f=Q'*q;
G=[T(1,:);T;B;-B];g=[1*Om(1);Om;b+EE;-b+EE]; 
%G=[T;B;-B];g=[Om;b+EE;-b+EE];
v=quadprog(H,f,G,g,[],[],zeros(size(q)),[],zeros(n,1),options);
Er(k)=abs(Q(k,:)*v-q(k));
%Q=zeros(n);Q(k,:)=T(k,:);q=zeros(n,1);q(k)=Om(k);H=-Q'*Q;f=Q'*q;
G=[T(1,:);-T;B;-B];g=[1*Om(1);-Om;b+EE;-b+EE];
%G=[-T;B;-B];g=[-Om;b+EE;-b+EE];
v=quadprog(H,f,G,g,[],[],zeros(size(q)),[],zeros(n,1),options);
Eru(k)=abs(Q(k,:)*v-q(k));end
toc;
close(h3)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%     Формирование коридоров ошибок
zz1=min([zz';(Om+C_min)']);zz2=max([zz';(Om+C_min)']);
zfmax=C*Eru+zz2;zfmin=zz1-(2-C)*Er;
ZL=[zfmin(1:end)];ZU=[zfmax(1:end)];
SL=s;SU=s;
u_up=AA*zfmax';u_lw=AA*zfmin';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure(1);han=plot(s,U,'r.',s,u_lw,'g',s,u_up,'b');set(gca,'FontName',FntNm);
set(han,'LineWidth',2);box on
xlabel('x');ylabel('u(x)');
title('Приближ. правая часть и апостериорные оценки точной правой части')
legend('Приближ. правая часть u_{\delta}(x)','Нижняя оценка для u(x)','Верхняя оценка для u(x)',1);

figure(2);
fill([SU fliplr(SL) SU(1)],[ZU fliplr(ZL) ZU(1) ],[ 0.85 0.85 0.85 ]);
hold on;
hd=plot(s,a0,'m');plot(s,zzz,'r.-');%plot(s,ZL,'k',s,ZU,'k');s,zz,'.-',
set(gca,'FontName',FntNm);
hold off;set(hd,'LineWidth',2);xlabel('s');ylabel('z(s)');
title('Поточечная апостериорная оценка точности приближенного решения')
vvv=ver('MATLAB');vvv1=round(str2num(vvv.Version));
if vvv1<7;
   legend('Точное решение','Приближ. решение','Коридор ошибок',1);
else
   legend('Коридор ошибок','Точное решение','Приближ. решение',1);
   end

disp('%%%%%%%%%%%%%%%%%%%%%%%%% Конец %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');


