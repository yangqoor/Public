% Int_ur_Volterra

%  Решение интегральных уравнений Вольтерра 1 рода методом
%  псевдообращения матрицы дискретизированной задачи -- неустойчивый метод. 
%  Анализ типа некоректности для рассматриваемых интегральных уравнений Вольтерра 1 рода
%  (см. с.248)

clear all
close all

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FntNm='Arial Cyr';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

delta=0.001; % Среднеквадратичная относ. ошибка данных (0.1%)

disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%')
disp(' ')
disp('   Решение интегральных уравнений Вольтерра 1 рода методом ');
disp('   псевдообращения матрицы дискретизированной задачи (см. с.248).')
disp(['   Относительная погрешность ядра и правой части уравнения = ' num2str(100*delta) ' %'])
disp(' ')
disp('   Нажмите любую клавишу ');pause
disp(' ')
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%')
disp(' ')
disp('   1) Численное дифференцирование путем решение интегрального уравнения (1.2).');
disp(' ')
disp('      Решение задачи на сетке размера = 1000')
disp('   Нажмите любую клавишу и подождите!');
pause
t=[0:0.001:1];n=length(t);h=0.001;y=t.^2/2; % Точные данные

yappr0=y+delta*randn(1,n);% Возмущенные данные
%    Алгоритм обращения матрицы
A=h*tril(ones(n-1));IA=inv(A);z=IA*y(2:end)';zappr=IA*yappr0(2:end)';
%Rel_ERROR=norm(zappr-z)/norm(z) % Относит. ошибка в норме L_2
%Max_Rel_Err=max(abs(zappr-z))/max(abs(z)) % Макс. относит. ошибка
figure(1); subplot(2,1,1);
plot(t(1:n-1),t(1:n-1),t(1:20:end),[z(1:20:end)' 1], 'r. ');
set(gca,'FontName',FntNm); 
title ( 'Нахождение производной из интегрального уравнения по точным данным' ) ;
legend (' Точное решение ',' Вычисленное решение' , 2) ; 
subplot (2,1,2) ;
plot (t(1:end), [zappr(1:end)' 1], 'r.-',t(1:n-1),t(1:n-1), 'k-')
set(gca,'FontName',FntNm);
title ('Нахождение производной из интегрального уравнения по данным точности \delta' );
legend (' Приближенное решение ' ,' Точное решение ' , 2 );
set(gcf,'Name','Размерность задачи = 1000','NumberTitle','off')

disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%')
disp(' ')
disp('    2) Численное дифференцирование на сетке размера = 125')
disp('   Нажмите любую клавишу и подождите!');
pause

%    Алгоритм обращения матрицы с другой сеткой
NN=8;
AA=A(1:NN:end,1:NN:end)*NN;yy=y(2:NN:end)';yyap=yappr0(2:NN:end)';IAA=inv(AA);
zz=IAA*yy;zzap=IAA*yyap;
figure(2); subplot(2,1,1);
plot(t(1:n-1),t(1:n-1),t(1:2*NN:end),[zz(2:2:end)' 1],...
   'r. ');
set(gca,'FontName',FntNm); 
title ( 'Нахождение производной из интегрального уравнения по точным данным' ) ;
legend (' Точное решение ',' Вычисленное решение' , 2) ; 
subplot (2,1,2);
plot (t(2:NN:end), [zzap(2:end)' 1], 'r.-',t(1:n-1),t(1:n-1), 'k-')
set(gca,'FontName',FntNm);
legend (' Приближенное решение ' ,' Точное решение ' , 2 ) ;
title ( 'Решение интегрального уравнения с приближенными данными' );
set(gcf,'Name','Размерность задачи = 125','NumberTitle','off')

S=svd(AA);s1=S/max(S);
 
disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%')
disp(' ')
disp('    3) Интегральное уравнение Вольтерра с ядром K(x,t)=(x-t)*exp(-(x-t)^2)');
disp(' ')
disp('   Нажмите любую клавишу и подождите!');
pause
t=linspace(0,1,125);x=t;n=length(t);h=t(2)-t(1);z=(t.^2/2)'; % Точные данные
[XX,TT]=meshgrid(x,t);K=tril((XX-TT).*exp(-(XX-TT).^2))*h;
u=K*z;
RN=randn(n,1);ud=u+delta*RN/norm(RN);
RK=tril(randn(size(K)));KK=K+delta*RK/norm(RK);
IK=pinv(K);IKK=pinv(KK);zt=IK*u;zd=IKK*ud;
NN=2;
figure(4); subplot(2,1,1);
plot(t,z,t(1:NN:end),zt(1:NN:end), 'r. ');set(gca,'FontName',FntNm); 
title ( 'Решение уравнения \int_{0}^{x}(x-t)*exp(-(x-t)^2)z(t)dt=u(x) с точными данными' ) ;
legend (' Точное решение ',' Вычисленное решение' , 2) ; 
subplot (2,1,2);
plot (t,zd, 'r.-',t,z, 'k-');set(gca,'FontName',FntNm);
legend (' Приближенное решение ' ,' Точное решение ' , 2 ) ;
title ( 'Решение интегрального уравнения с приближенными данными' );
pause(1)

SK=svd(K);sk=SK/max(SK);

figure(11);semilogy(1:length(S),s1,'.-');hold on;semilogy(1:length(SK),sk,'.-r');
hold off
set(gca,'FontName',FntNm);
title('Сингулярные числа матриц для задач \int_{0}^{x}K(x,t)z(t)dt=u(x)')
legend ('Дифференцирование: K(x,t)=1' ,'Ядро K(x,t)=(x-t)*exp(-(x-t)^2)' ,1) ;
set(gcf,'Name','Сравнение сингулярных чисел задач','NumberTitle','off')

disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%')
disp(' ')
disp('    4) Интегральное уравнение Вольтерра с ядром K(x,t)=(x-t)^2*exp(-(x-t)^2)');
disp(' ')
disp('   Нажмите любую клавишу и подождите!');
pause

K1=tril(((XX-TT).^2).*exp(-(XX-TT).^2))*h;
u=K1*z;
RN1=randn(n,1);ud1=u+delta*RN1/norm(RN1);
RK1=tril(randn(size(K)));KK1=K1+delta*RK1/norm(RK1);
IK1=pinv(K1);IKK1=pinv(KK1);zt1=IK1*u;zd1=IKK1*ud1;
NN=2;
figure(5); subplot(2,1,1);
plot(t,z,t(1:NN:end),zt1(1:NN:end), 'r. ');set(gca,'FontName',FntNm); 
title ( 'Решение уравнения \int_{0}^{x}(x-t)^2*exp(-(x-t)^2)z(t)dt=u(x) с точными данными' ) ;
legend (' Точное решение ',' Вычисленное решение' , 2) ; 
subplot (2,1,2);
plot (t,zd1, 'r.-',t,z, 'k-');set(gca,'FontName',FntNm);
legend (' Приближенное решение ' ,' Точное решение ' , 2 ) ;
title ( 'Решение интегрального уравнения с приближенными данными' );
pause(1)

SK1=svd(K1);sk1=SK1/max(SK1);
figure(111);semilogy(1:length(S),s1,'.-');hold on;semilogy(1:length(SK),sk,'.-r');
semilogy(1:length(SK1),sk1,'.-k');hold off
set(gca,'FontName',FntNm);
title('Сингулярные числа матриц для задач \int_{0}^{x}K(x,t)z(t)dt=u(x)')
legend ('Дифференцирование: K(x,t)=1' ,...
   'Ядро K(x,t)=(x-t)*exp(-(x-t)^2)','Ядро K(x,t)=(x-t)^2*exp(-(x-t)^2)' ,3) ;
set(gcf,'Name','Сравнение сингулярных чисел задач','NumberTitle','off')
disp(' ')
disp('%%%%%%%%%%%%%%%%%% Конец %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%')


