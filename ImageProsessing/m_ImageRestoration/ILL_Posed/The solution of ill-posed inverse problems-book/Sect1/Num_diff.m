%  Num_diff
%    Численное дифференцирование как некорректно поставленная задача (с.28)
clear
close all

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FntNm='Arial Cyr';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% Численное дифференцирование по алгоритму конечных разностей
t=[0:0.001:1];n=length(t);h=0.001;y=t.^2/2; % Точные данные 

%  Численное дифференцирование: решение интегрального уравнения
%  y(t)=int_{0}^{t}z(s)ds
%
disp(' ')
disp(' Численное дифференцирование как некорректно поставленная задача (с.28).')
disp('     Численное дифференцирование: решение интегрального уравнения (1.2)');
disp(' ')
disp('     Нажмите любую клавишу и подождите!');pause

%

delta=0.001; %- Среднеквадратичная относ. ошибка данных (0.1%)
disp(' ');disp(['   Относительная точность данных delta = ' num2str(delta)]);disp(' ');

yappr0=y+delta*randn(1,n);
A=h*tril(ones(n-1));IA=inv(A);z=IA*y(2:end)';zappr=IA*yappr0(2:end)';
disp(' ')
disp(' Относит. ошибка решения в норме L_2')
Rel_ERROR=norm(zappr-z)/norm(z) % Относит. ошибка в норме L_2
disp(' Макс. относит. ошибка решения (в С)')
Max_Rel_Err=max(abs(zappr-z))/max(abs(z)) % Макс. относит. ошибка
%
figure(3); subplot(2,1,1);
plot(t(1:n-1),t(1:n-1),t(1:20:end),[z(1:20:end)' 1], 'r. ');set(gca,'FontName',FntNm); 
title ( 'Нахождение производной из интегрального уравнения по точным данным' ) ;
legend (' Точное решение ',' Вычисленное решение' , 2) ; 
subplot (2,1,2) ;
plot (t(1:end), [zappr(1:end)' 1], 'r.-',t(1:n-1),t(1:n-1), 'k-')
set(gca,'FontName',FntNm);
title ('Нахождение производной из интегрального уравнения по данным точности \delta' );
legend (' Приближенное решение ' ,' Точное решение ' , 2 ) ;

