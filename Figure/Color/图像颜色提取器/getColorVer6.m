function getColorVer6

global GUI;
global control xy;
global ima imaHdl;
global x_limit y_limit;
global rgb_type;
global color color_num color_list 
global page total_page;
% -------------------------------------------------------------------------
control=0;
xy=[];
ima=uint8(ones(500,500,3).*255);
x_limit=500;y_limit=500;
%
rgb_type=1;
color=[];
color_num=1;
color_list=[0 0 0];
color_list(1,:)=[];
%
page=1;
total_page=2;
% =========================================================================
% 主窗口及主窗口回调
GUI.fig=figure('units','pixels',...
    'position',[350 100 800 500],...
    'Numbertitle','off',...
    'menubar','none',...
    'resize','off',...
    'name','getcolor',...
    'color',[0.95 0.95 0.95]);
set(GUI.fig,'WindowButtonDownFcn',@bt_down);
set(GUI.fig,'WindowButtonMotionFcn',@bt_move) 
% -------------------------------------------------------------------------
GUI.axes=axes('Units','pixels',...
      'PlotBoxAspectRatio',[1 1 1],...
      'Position',[50 30 400 400],...
      'Color',[0.98 0.98 0.98],...
      'Box','on', ...
      'XLim',[0 500],...
      'YLim',[0 500], ...
      'XColor','none','YColor','none',...
      'YDir','reverse', ...
      'xtick',[],'ytick',[]);
hold(GUI.axes,'on');
% -------------------------------------------------------------------------
% 颜色格式设置窗口
uh1=uimenu('label','设置');
uimenu(uh1,'label','RGB类型设置','callback',@RGBset)
    function RGBset(~,~)
        GUI.rgbfig=figure('units','pixels',...
            'position',[360 370 180 150],...
            'Numbertitle','off',...
            'menubar','none',...
            'name','RGBset',...
            'resize','off');
        GUI.checkbox1=uicontrol('parent',GUI.rgbfig,...
            'style','checkbox',...
            'string','范围:0－1',...
            'position',[30 100 100 30],...
            'fontsize',10,...
            'value',rgb_type,...
            'callback',@ifon1);
        GUI.checkbox255=uicontrol('parent',GUI.rgbfig,...
            'style','checkbox',...
            'string','范围:0－255',...
            'position',[30 60 100 30],...
            'fontsize',10,...
            'value',~rgb_type,...
            'callback',@ifon255);
        GUI.makesurebutton=uicontrol('parent',GUI.rgbfig,...
            'style','pushbutton',...
            'string','确定设置',...
            'position',[30 20 100 25],...
            'fontsize',10,...
            'callback',@settype);
        
        function ifon1(~,~)
            if(get(GUI.checkbox1,'value')==1)
                set(GUI.checkbox1,'value',1);
                set(GUI.checkbox255,'value',0);
            else
                set(GUI.checkbox1,'value',1);
            end
        end
        function ifon255(~,~)
            if(get(GUI.checkbox255,'value')==1)
                set(GUI.checkbox255,'value',1);
                set(GUI.checkbox1,'value',0);
            else
                set(GUI.checkbox255,'value',1);
            end
        end
        function settype(~,~)
            rgb_type=get(GUI.checkbox1,'value');
            if ~isempty(color)
                set(GUI.text1,'backgroundcolor',color./255);
                switch rgb_type
                    case 1
                        set(GUI.text2,'string',[sprintf('%.2f',color(1)./255),',',sprintf('%.2f',color(2)./255),',',sprintf('%.2f',color(3)./255)])
                    case 0
                        set(GUI.text2,'string',[num2str(round(color(1))),',',num2str(round(color(2))),',',num2str(round(color(3)))])
                end
            end
            show_color(page);
            close(GUI.rgbfig)
        end
    end
% -------------------------------------------------------------------------
% 数据导出
uh2=uimenu('label','保存');
uimenu(uh2,'label','命令行导出','callback',@saveas_com)
uimenu(uh2,'label','储存为mat','callback',@saveas_mat)
uimenu(uh2,'label','储存为txt','callback',@saveas_txt)
uimenu(uh2,'label','储存为csv','callback',@saveas_csv)
uimenu(uh2,'label','储存为excel','callback',@saveas_exl)
uimenupic=uimenu(uh2,'label','储存为色带');
uimenu(uimenupic,'label','储存全部页码','callback',@saveas_pic_all);
uimenu(uimenupic,'label','储存当前页码','callback',@saveas_pic_now);
%
    function saveas_com(~,~)
        fprintf('color_list=\n[');
        for ii=1:size(color_list,1)
            switch rgb_type
                case 1
                    fprintf('%s\n',[sprintf('%.3f',color_list(ii,1)./255),',',sprintf('%.3f',color_list(ii,2)./255),',',sprintf('%.3f',color_list(ii,3)./255)]);
                case 0
                    fprintf('%s\n',[sprintf('%.2f',color_list(ii,1)),',',sprintf('%.2f',color_list(ii,2)),',',sprintf('%.2f',color_list(ii,3))]);
            end
        end
        fprintf(']\r\n');
    end
%
    function saveas_mat(~,~)
        [filename, pathname] = uiputfile({'*.mat','mat'});
        switch rgb_type
            case 1
                ColorInf.Color=color_list./255;
            case 0
                ColorInf.Color=color_list;
        end
        save([pathname,filename],'ColorInf');
    end
%
    function saveas_txt(~,~)
        [filename, pathname] = uiputfile({'*.txt','记事本'});
        fid=fopen([ pathname,filename],'w');
        fprintf(fid,'color_list=\r\n');
        for ii=1:size(color_list,1)
            switch rgb_type
                case 1
                    fprintf(fid,'%s\r\n',[sprintf('%.3f',color_list(ii,1)./255),',',sprintf('%.3f',color_list(ii,2)./255),',',sprintf('%.3f',color_list(ii,3)./255)]);
                case 0
                    fprintf(fid,'%s\r\n',[sprintf('%.2f',color_list(ii,1)),',',sprintf('%.2f',color_list(ii,2)),',',sprintf('%.2f',color_list(ii,3))]);
            end
        end
        fclose(fid);
    end
%
    function saveas_csv(~,~)
        [filename, pathname] = uiputfile({'*.csv','字符分隔值'});
        fid=fopen([ pathname,filename],'w');
        fprintf(fid,'color_list=\r\n');
        for ii=1:size(color_list,1)
            switch rgb_type
                case 1
                    fprintf(fid,'%s\r\n',[sprintf('%.3f',color_list(ii,1)./255),',',sprintf('%.3f',color_list(ii,2)./255),',',sprintf('%.3f',color_list(ii,3)./255)]);
                case 0
                    fprintf(fid,'%s\r\n',[sprintf('%.2f',color_list(ii,1)),',',sprintf('%.2f',color_list(ii,2)),',',sprintf('%.2f',color_list(ii,3))]);
            end
        end
        fclose(fid);
    end
%
    function saveas_exl(~,~)
        [filename, pathname]=uiputfile({'*.xlsx','excel'});
        switch rgb_type
            case 1
                writematrix(round(color_list./255.*1000)./1000,[pathname,filename],'Sheet',1)
            case 0
                writematrix(round(color_list.*100)./100,[pathname,filename],'Sheet',1)
        end
    end
%
    function saveas_pic_all(~,~)
        page_with_color=total_page-1;
        px=50;
        gap_px=10;
        pic=ones(9*px,page_with_color*px+(page_with_color-1)*gap_px,3);
        for p=1:page_with_color
            for ii=(p-1)*9+1:p*9
                for kk=1:3
                    if ii<=length(color_list)
                        pic((ii-(p-1)*9-1)*px+1:(ii-(p-1)*9)*px,(p-1)*(px+gap_px)+1:(p-1)*(px+gap_px)+px,kk)=color_list(ii,kk)/255;
                    end
                end
            end
        end
        [filename, pathname] = uiputfile({'*.jpg;*.png','All Image Files';...
            '*.jpg','JPG';'*.png','PNG' });
        imwrite(pic,[pathname,filename]);
    end
%
    function saveas_pic_now(~,~)
        try
            [m,~]=size(color_list);
            m=m-(page-1)*9;
            m(m>9)=9;
            px=50;
            pic=ones(9*px,1*px,3);
            if m>0
                for ii=(page-1)*9+1:(page-1)*9+m
                    for kk=1:3
                        pic((ii-1)*px+1:ii*px,1:px,kk)=color_list(ii,kk)/255;
                    end
                end
            else
            end
            [filename, pathname] = uiputfile({'*.jpg;*.png','All Image Files';...
                '*.jpg','JPG';'*.png','PNG' });
            imwrite(pic,[pathname,filename]);
        catch
        end
    end

% =========================================================================
GUI.text=uicontrol('parent',GUI.fig,...
    'style','text',...
    'string','色彩识别',...
    'horizontalalign','center',...
    'position',[50 440 400 30],...
    'backgroundcolor',[0.85 0.89 0.85],...
    'foregroundcolor','k',...
    'fontsize',15);
GUI.text1=uicontrol('parent',GUI.fig,...
    'style','text',...
    'string','',...
    'horizontalalign','center',...
    'position',[460 330 100 100],...
    'backgroundcolor',[1 1 1],...
    'foregroundcolor','k',...
    'fontsize',12);
GUI.text2=uicontrol('parent',GUI.fig,...
    'style','text',...
    'string','',...
    'horizontalalign','center',...
    'position',[350 440 210 30],...
    'backgroundcolor',[1 1 1],...
    'foregroundcolor','k',...
    'fontsize',10);
GUI.savecolorbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','储存颜色',...
    'position',[460 290 100 30],...
    'backgroundcolor',[0.85 0.89 0.85],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@save_color);
GUI.deletedatabutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','清空数据',...
    'position',[460 230 100 30],...
    'backgroundcolor',[0.8 0.9 0.9],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@clear_data);
GUI.deletepicbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','删除图片',...
    'position',[460 180 100 30],...
    'backgroundcolor',[0.8 0.9 0.9],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@delete_pic);
GUI.getcapbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','屏幕截图',...
    'position',[460 130 100 30],...
    'backgroundcolor',[0.8 0.9 0.9],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@get_capture);
GUI.getpicbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','读取图片',...
    'position',[460 80 100 30],...
    'backgroundcolor',[0.8 0.9 0.9],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@getImage);
GUI.getcolorbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'tag','recc',...
    'string','获取颜色',...
    'position',[460 30 100 30],...
    'backgroundcolor',[0.8 0.9 0.9],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@get_color);
% =========================================================================
for i=1:9
    GUI.C1(i)=uicontrol('parent',GUI.fig,...
    'style','text',...
    'string','',...
    'horizontalalign','left',...
    'position',[600 440-40*(i-1) 30 30],...
    'backgroundcolor',[1 1 1],...
    'foregroundcolor','k',...
    'fontsize',10);    
end
%
for i=1:9
    GUI.C2(i)=uicontrol('parent',GUI.fig,...
    'style','text',...
    'string','',...
    'horizontalalign','center',...
    'position',[640 440-40*(i-1) 150 30],...
    'backgroundcolor',[1 1 1],...
    'foregroundcolor','k',...
    'fontsize',9);    
end

GUI.inputbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','清除最后一个颜色',...
    'position',[600 80 190 30],...
    'backgroundcolor',[0.85 0.89 0.85],...
    'foregroundcolor','k',...
    'fontsize',15,...
    'callback',@delete_last);

GUI.lpbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','<上一页',...
    'position',[600 30 70 30],...
    'backgroundcolor',[0.85 0.85 0.85],...
    'foregroundcolor','k',...
    'fontsize',12,...
    'callback',@lastpage);
GUI.npbutton=uicontrol('parent',GUI.fig,...
    'style','pushbutton',...
    'string','下一页>',...
    'position',[720 30 70 30],...
    'backgroundcolor',[0.85 0.85 0.85],...
    'foregroundcolor','k',...
    'fontsize',12,...
    'callback',@nextpage);
GUI.page=uicontrol('parent',GUI.fig,...
    'style','text',...
    'string',[num2str(page),'/',num2str(total_page)],...
    'horizontalalign','center',...
    'position',[670 30 50 27],...
    'backgroundcolor',[0.95 0.95 0.95],...
    'foregroundcolor','k',...
    'fontsize',12);
function lastpage(~,~)
    page=page-1;
    page(page<1)=1;
    set(GUI.page,'string',[num2str(page),'/',num2str(total_page)]);
    show_color(page);
end
function nextpage(~,~)
    page=page+1;
    page(page>total_page)=total_page;
    set(GUI.page,'string',[num2str(page),'/',num2str(total_page)]);
    show_color(page);
end

% =========================================================================
    function show_color(cur_page)
        len_list=size(color_list,1);
        for ii=(cur_page-1)*9+1:(cur_page-1)*9+9
            tn=ii-(cur_page-1)*9;
            if(ii<=len_list)
                set(GUI.C1(tn),'backgroundcolor',color_list(ii,:)/255)
                switch rgb_type
                    case 1
                        set(GUI.C2(tn),'string',[sprintf('%.2f',color_list(ii,1)./255),',',sprintf('%.2f',color_list(ii,2)./255),',',sprintf('%.2f',color_list(ii,3)./255)])
                    case 0
                        set(GUI.C2(tn),'string',[num2str(round(color_list(ii,1))),',',num2str(round(color_list(ii,2))),',',num2str(round(color_list(ii,3)))])
                end
            else
                set(GUI.C1(tn),'backgroundcolor',[1 1 1])
                set(GUI.C2(tn),'string','')
            end
        end
    end

    function save_color(~,~)
        if ~isempty(get(GUI.text2,'string'))
            color_list(color_num,:)=color;
            color_num=color_num+1;
            if color_num-1>(total_page-1)*9
                page=ceil(color_num/9);
                total_page=total_page+1;
                set(GUI.page,'string',[num2str(page),'/',num2str(total_page)]);
            end
            show_color(page)
        end
    end

    function clear_data(~,~)
        control=0;     
        set(GUI.text2,'string','');
        set(GUI.text1,'backgroundcolor',[1 1 1]);
        set(GUI.axes,...
        'XLim',[0 500],...
        'YLim',[0 500],...
        'Position',[50 30 400 400],...
        'Color',[0.949 0.949 0.949]);
        delete(imaHdl);
        ima=uint8(ones(500,500,3).*242);
        x_limit=500;
        y_limit=500;
    end

    function delete_pic(~,~)
        control=0;
        set(GUI.axes,...
        'XLim',[0 500],...
        'YLim',[0 500],...
        'Position',[50 30 400 400],...
        'Color',[0.949 0.949 0.949]);
        delete(imaHdl);
        ima=uint8(ones(500,500,3).*242);
        x_limit=500;
        y_limit=500;
    end


    function get_capture(~,~)
        robo = java.awt.Robot;
        tk = java.awt.Toolkit.getDefaultToolkit();
        rectSize = java.awt.Rectangle(tk.getScreenSize());
        cap = robo.createScreenCapture(rectSize);
        
        % Convert to an RGB image
        rgb = typecast(cap.getRGB(0, 0, cap.getWidth, cap.getHeight, [], 0, cap.getWidth), 'uint8');
        imgData = zeros(cap.getHeight, cap.getWidth, 3, 'uint8');
        imgData(:, :, 1) = reshape(rgb(3:4:end), cap.getWidth, [])';
        imgData(:, :, 2) = reshape(rgb(2:4:end), cap.getWidth, [])';
        imgData(:, :, 3) = reshape(rgb(1:4:end), cap.getWidth, [])';
        ima=imgData;
        [x,y,~]=size(ima);
        x_limit=x;y_limit=y;
        leng=max([x_limit,y_limit]);
        set(GUI.axes,...
        'XLim',[0 leng],...
        'YLim',[0 leng]);
        delete(imaHdl);
        imaHdl=imshow(ima,'Parent',GUI.axes);
    end

    function get_color(~,~)
        if control==0
            set(GUI.text1,'backgroundcolor',[1 1 1]);
            set(GUI.text2,'string','');       
        end
        control=1;
    end

    function delete_last(~,~)
        if color_num>1
            color_list(end,:)=[];
            color_num=color_num-1;
            page=ceil((color_num-1)/9);
            page(page<1)=1;
            total_page=page+1;
            set(GUI.page,'string',[num2str(page),'/',num2str(total_page)]);
            show_color(page)
        end
    end





% =========================================================================
% fig回调函数
function bt_down(~,~)
    control=0;
end
function bt_move(~,~)
    xy=get(GUI.axes,'CurrentPoint');
    x=xy(1,2);y=xy(1,1);
    if x<=x_limit&&y<=y_limit&&x>=1&&y>=1&&control==1
        color=double([ima(round(x),round(y),1),ima(round(x),round(y),2),ima(round(x),round(y),3)]);
        if control==1&&~isempty(color)
            set(GUI.text1,'backgroundcolor',color./255);
            switch rgb_type
                case 1
                    set(GUI.text2,'string',[sprintf('%.2f',color(1)./255),',',sprintf('%.2f',color(2)./255),',',sprintf('%.2f',color(3)./255)])
                case 0
                    set(GUI.text2,'string',[num2str(round(color(1))),',',num2str(round(color(2))),',',num2str(round(color(3)))])
            end
        end
    end
end
% =========================================================================
    function getImage(~,~)
        warning off;
        try
        [filename, pathname] = uigetfile({'*.jpg;*.tif;*.png;*.gif','All Image Files';...
            '*.*','All Files' });
        ima=imread([ pathname,filename]);
        [x,y,~]=size(ima);
        x_limit=x;y_limit=y;
        leng=max([x_limit,y_limit]);
        set(GUI.axes,...
        'XLim',[0 leng],...
        'YLim',[0 leng]);
        delete(imaHdl);
        imaHdl=imshow(ima,'Parent',GUI.axes);
        catch
        end
    end 
end